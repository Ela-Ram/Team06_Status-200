[
  {
    "requests": [
      {

        "name": "Creating User with Role",
        "data": [
            {
                "scenario": "post Admin All Valid",
                "scenario1": "post admin",
            
                    "userFirstName": "John",
                    "userMiddleName": "Michael",
                    "userLastName": "Doe",
                    "userPhoneNumber": "+91 9443026205",
                    "userLoginEmail": "john5.doe99@gmail.com",
                    "userLinkedinUrl": "https://www.linkedin.com/in/johndoe",
                    "userLocation": "NewYork",
                    "userTimeZone": "EST",
                    "userRoleStatus": "Active",
                    "roleId": "R01",
                    "userVisaStatus": "GC-EAD",
                    "loginStatus": "Active",
                    "userEduUg": "BSc Information Technology",
                    "userEduPg": "MSc Computer Science",
                    "userComments": "Experience in IT",
                
               "expectedStatusCode": 201,
               "expectedStatusMessage": "Created",
               "endpoint": "/users/roleStatus",
              "includeAuth": "true",
              "schemaValidation": "post"
          },
          {
            "scenario": "post Staff All Valid",
            "scenario1": "post staff",
          "userFirstName": "Alice",
        "userMiddleName": "Marie",
        "userLastName": "Smith",
        "userPhoneNumber": "+1 4157891239",
        "userLoginEmail": "alice5.smith@gmail.com",
        "userLinkedinUrl": "https://www.linkedin.com/in/alicesmith",
        "userLocation": "SanFrancisco",
        "userTimeZone": "CST",
        "userRoleStatus": "Active",
        "roleId": "R02",
        "userVisaStatus": "H1B",
        "loginStatus": "Active",
        "userEduUg": "BSc Computer Science",
        "userEduPg": "MBA",
        "userComments": "Passionate about tech and innovation",
           "expectedStatusCode": 201,
           "expectedStatusMessage": "Created",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "post"
          },
          {
            "scenario": "post Student All Valid",
            "scenario1": "post student",
          "userFirstName": "Robert",
        "userMiddleName": "James",
        "userLastName": "Brown",
        "userPhoneNumber": "+1 7700900127",
        "userLoginEmail": "robert4.brown@gmail.com",
        "userLinkedinUrl": "https://www.linkedin.com/in/robertbrown",
        "userLocation": "London",
        "userTimeZone": "CST",
        "userRoleStatus": "Active",
        "roleId": "R03",
        "userVisaStatus": "NA",
        "loginStatus": "Active",
        "userEduUg": "BSc Software Engineering",
        "userEduPg": "MSc AI & Data Science",
        "userComments": "Expert in AI and Machine Learning",
           "expectedStatusCode": 201,
           "expectedStatusMessage": "Created",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "post"
          },
          {
            "scenario": "post with role mandatory only",
            "scenario1": "post mandatory",
           "userComments": "",
              "userEduPg": "",
              "userEduUg": "",
              "userFirstName": "Emma",
              "userLastName": "Williams",
              "userLinkedinUrl": "",
              "userLocation": "",
              "userMiddleName": "",
              "userPhoneNumber": "+1 6178765435",
              "roleId": "R03",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "H4-EAD",
              "loginStatus": "",
              "userLoginEmail": "",
           "expectedStatusCode": 201,
           "expectedStatusMessage": "Created",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          

          {
            "scenario": "post with role empty phone number",
            "scenario1": " empty phone number",
           "userComments": "software engineer",
              "userEduPg": "MSc Data Science",
              "userEduUg": "BSc Computer Engineering",
              "userFirstName": "Alice",
              "userLastName": "Smith",
              "userLinkedinUrl": "https://www.linkedin.com/in/alicesmith",
              "userLocation": "San Francisco",
              "userMiddleName": "Marie",
              "userPhoneNumber": "",
              "roleId": "R02",
              "userRoleStatus": "Inactive",
              "userTimeZone": "PST",
              "userVisaStatus": "Green Card",
              "loginStatus": "Active",
              "userLoginEmail": "alice.smith23@gmail.com",
           "expectedStatusCode": 400,
           "expectedStatusMessage": "Bad Request",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          
          
          
          {
            "scenario": "post with role empty firstname ",
            "scenario1": "empty firstname",
           "userComments": "software engineer",
              "userEduPg": "MSc Data Science",
              "userEduUg": "BSc Computer Engineering",
              "userFirstName": "",
              "userLastName": "Smith",
              "userLinkedinUrl": "https://www.linkedin.com/in/alicesmith",
              "userLocation": "San Francisco",
              "userMiddleName": "Marie",
              "userPhoneNumber": "+1 4157896543",
              "roleId": "R01",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "Green Card",
              "loginStatus": "Inactive",
              "userLoginEmail": "alice.smith23@gmail.com",
           "expectedStatusCode": 400,
           "expectedStatusMessage": "Bad Request",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          {
            "scenario": "post with role empty lastname ",
            "scenario1": "empty lastname",
           "userComments": "software engineer",
              "userEduPg": "MSc Data Science",
              "userEduUg": "BSc Computer Engineering",
              "userFirstName": "Alice",
              "userLastName": "",
              "userLinkedinUrl": "https://www.linkedin.com/in/alicesmith",
              "userLocation": "San Francisco",
              "userMiddleName": "Marie",
              "userPhoneNumber": "+1 4157896543",
              "roleId": "R01",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "Green Card",
              "loginStatus": "Inactive",
              "userLoginEmail": "alice.smith23@gmail.com",
           "expectedStatusCode": 400,
           "expectedStatusMessage": "Bad Request",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          {
            "scenario": "post with role empty time zone ",
            "scenario1": "empty time zone",
           "userComments": "software engineer",
              "userEduPg": "MSc Data Science",
              "userEduUg": "BSc Computer Engineering",
              "userFirstName": "Alice",
              "userLastName": "Wonderla",
              "userLinkedinUrl": "https://www.linkedin.com/in/alicesmith",
              "userLocation": "San Francisco",
              "userMiddleName": "Marie",
              "userPhoneNumber": "+1 4157896543",
              "roleId": "R01",
              "userRoleStatus": "Active",
              "userTimeZone": "",
              "userVisaStatus": "Green Card",
              "loginStatus": "Inactive",
              "userLoginEmail": "alice.smith23@gmail.com",
           "expectedStatusCode": 400,
           "expectedStatusMessage": "Bad Request",
           "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
            {
              "scenario": "post with role empty visa status ",
              "scenario1": "empty visa status",
            "userComments": "software engineer",
                "userEduPg": "MSc Data Science",
                "userEduUg": "BSc Computer Engineering",
                "userFirstName": "Alice",
                "userLastName": "Wonderla",
                "userLinkedinUrl": "https://www.linkedin.com/in/alicesmith",
                "userLocation": "San Francisco",
                "userMiddleName": "Marie",
                "userPhoneNumber": "+1 4157896543",
                "roleId": "R01",
                "userRoleStatus": "Active",
                "userTimeZone": "CST",
                "userVisaStatus": "",
                "loginStatus": "Inactive",
                "userLoginEmail": "alice.smith23@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role empty email ",
              "scenario1": "empty email",
            "userComments": "Data Scientist",
              "userEduPg": "MSc Data Science",
              "userEduUg": "BSc Statistics",
              "userFirstName": "Sophia",
              "userLastName": "Martinez",
              "userLinkedinUrl": "https://www.linkedin.com/in/sophiamartinez",
              "userLocation": "San Francisco",
              "userMiddleName": "Isabella",
              "userPhoneNumber": "+1 4158765432",
              "roleId": "R02",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "H4",
              "loginStatus": "Active",
              "userLoginEmail": "",
            "expectedStatusCode": 201,
            "expectedStatusMessage": "Created",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role invalid roleID",
              "scenario1": "invalid roleID",
              "userComments": "Software Engineer",
              "userEduPg": "MSc Computer Science",
              "userEduUg": "BSc Software Engineering",
              "userFirstName": "Liam",
              "userLastName": "Brown",
              "userLinkedinUrl": "https://www.linkedin.com/in/liambrown",
              "userLocation": "Chicago",
              "userMiddleName": "Alexander",
              "userPhoneNumber": "+1 3124567890",
              "roleId": "R&5",
              "userRoleStatus": "Inactive",
              "userTimeZone": "CST",
              "userVisaStatus": "NA",
              "loginStatus": "Inactive",
              "userLoginEmail": "liam.brown91@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role invalid firstname",
              "scenario1": "invalid firstname",
              "userComments": "Software Engineer",
              "userEduPg": "MSc Computer Science",
              "userEduUg": "BSc Software Engineering",
              "userFirstName": "Tam@6*",
              "userLastName": "Brown",
              "userLinkedinUrl": "https://www.linkedin.com/in/liambrown",
              "userLocation": "Chicago",
              "userMiddleName": "Alexander",
              "userPhoneNumber": "+1 3124567890",
              "roleId": "R&5",
              "userRoleStatus": "Inactive",
              "userTimeZone": "CST",
              "userVisaStatus": "NA",
              "loginStatus": "Inactive",
              "userLoginEmail": "liam.brown91@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role invalid lastname",
              "scenario1": "invalid lastname",
              "userComments": "Software Engineer",
              "userEduPg": "MSc Computer Science",
              "userEduUg": "BSc Software Engineering",
              "userFirstName": "Tom",
              "userLastName": "b59^&J",
              "userLinkedinUrl": "https://www.linkedin.com/in/liambrown",
              "userLocation": "Chicago",
              "userMiddleName": "Alexander",
              "userPhoneNumber": "+1 3124567890",
              "roleId": "R&5",
              "userRoleStatus": "Inactive",
              "userTimeZone": "CST",
              "userVisaStatus": "NA",
              "loginStatus": "Inactive",
              "userLoginEmail": "liam.brown91@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role invalid time zone",
              "scenario1": "invalid time zone",
              "userComments": "Software Engineer",
              "userEduPg": "MSc Computer Science",
              "userEduUg": "BSc Software Engineering",
              "userFirstName": "Tom",
              "userLastName": "Brown",
              "userLinkedinUrl": "https://www.linkedin.com/in/liambrown",
              "userLocation": "Chicago",
              "userMiddleName": "Alexander",
              "userPhoneNumber": "+1 3124567890",
              "roleId": "R&5",
              "userRoleStatus": "Inactive",
              "userTimeZone": "C4&",
              "userVisaStatus": "NA",
              "loginStatus": "Inactive",
              "userLoginEmail": "liam.brown91@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role invalid visa status",
              "scenario1": "invalid visa status",
              "userComments": "Software Engineer",
              "userEduPg": "MSc Computer Science",
              "userEduUg": "BSc Software Engineering",
              "userFirstName": "Tom",
              "userLastName": "Brown",
              "userLinkedinUrl": "https://www.linkedin.com/in/liambrown",
              "userLocation": "Chicago",
              "userMiddleName": "Alexander",
              "userPhoneNumber": "+1 3124567890",
              "roleId": "R01",
              "userRoleStatus": "Inactive",
              "userTimeZone": "CST",
              "userVisaStatus": "UY^yy",
              "loginStatus": "Active",
              "userLoginEmail": "liam.brown91@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role invalid email",
              "scenario1": "invalid email",
             "userComments": "Network Engineer",
              "userEduPg": "MSc Networking & Security",
              "userEduUg": "BSc Electrical Engineering",
              "userFirstName": "Olivia",
              "userLastName": "Clark",
              "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
              "userLocation": "Los Angeles",
              "userMiddleName": "Emily",
              "userPhoneNumber": "+1 2135678901",
              "roleId": "R03",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "US-Citizen",
              "loginStatus": "Active",
              "userLoginEmail": "olivia.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role existing email",
              "scenario1": "existing email",
             "userComments": "Network Engineer",
              "userEduPg": "MSc Networking & Security",
              "userEduUg": "BSc Electrical Engineering",
              "userFirstName": "Olivia",
              "userLastName": "Clark",
              "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
              "userLocation": "Los Angeles",
              "userMiddleName": "Emily",
              "userPhoneNumber": "+1 2135678901",
              "roleId": "R03",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "US-Citizen",
              "loginStatus": "Active",
              "userLoginEmail": "saranya@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            {
              "scenario": "post with role existing phone number",
              "scenario1": "existing phone number",
             "userComments": "Network Engineer",
              "userEduPg": "MSc Networking & Security",
              "userEduUg": "BSc Electrical Engineering",
              "userFirstName": "Olivia",
              "userLastName": "Clark",
              "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
              "userLocation": "Los Angeles",
              "userMiddleName": "Emily",
              "userPhoneNumber": "+1 3213123123",
              "roleId": "R03",
              "userRoleStatus": "Active",
              "userTimeZone": "PST",
              "userVisaStatus": "US-Citizen",
              "loginStatus": "Active",
              "userLoginEmail": "olivia.clark55@gmail.com",
            "expectedStatusCode": 400,
            "expectedStatusMessage": "Bad Request",
            "endpoint": "/users/roleStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
            },
            
          

          {
            "scenario": "post with role phone number more than 10 numbers",
            "scenario1": "phone number more than 10 digits",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "+1 213567890123",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
          "expectedStatusCode": 400,
          "expectedStatusMessage": "Bad Request",
          "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          {
            "scenario": "post with role phone number less than 10 numbers",
            "scenario1": "phone number less than 10 digits",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "+1 21356789",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
          "expectedStatusCode": 400,
          "expectedStatusMessage": "Bad Request",
          "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          {
            "scenario": "post with role phone number invalid value",
            "scenario1": "phone number invalid value",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "+1 21ad901$56",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
          "expectedStatusCode": 400,
          "expectedStatusMessage": "Bad Request",
          "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          {
            "scenario": "post with role phone number invalid format",
            "scenario1": "phone number invalid format",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "2135678901",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
          "expectedStatusCode": 400,
          "expectedStatusMessage": "Bad Request",
          "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          
         
          {
            "scenario": "post with role invalid Endpoint",
            "scenario1": "wrong endpoint",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "2135678901",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
          "expectedStatusCode": 404,
          "expectedStatusMessage": "Not Found",
          "endpoint":"/usersroleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
          {
            "scenario": "post with role invalid Base URL",
            "scenario1": "invalidBaseURL",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "2135678901",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "invalidBase_URL":"https://lms-hackthon-feb25-803334cfbe.herokuapp.com/lms",
             "endpoint": "/users/roleStatus",
             "includeAuth": "true",
             "schemaValidation": "no"
          },
          {
            "scenario": "post with role invalid BaseURL with /",
            "scenario1": "invalidBaseURL",
           "userComments": "Network Engineer",
            "userEduPg": "MSc Networking & Security",
            "userEduUg": "BSc Electrical Engineering",
            "userFirstName": "Olivia",
            "userLastName": "Clark",
            "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
            "userLocation": "Los Angeles",
            "userMiddleName": "Emily",
            "userPhoneNumber": "+1 2135678901",
            "roleId": "R03",
            "userRoleStatus": "Active",
            "userTimeZone": "PST",
            "userVisaStatus": "US-Citizen",
            "loginStatus": "Active",
            "userLoginEmail": "olivia.clark55@gmail.com",
          "expectedStatusCode": 404,
          "expectedStatusMessage": "Not Found",
          "invalidBase_URL":"https://lms-hackthon-feb25-803334c87fbe.herokuapp.com/lms/",
          "endpoint": "/users/roleStatus",
          "includeAuth": "true",
          "schemaValidation": "no"
          },
         

{
  "scenario": "post with role no auth",
  "scenario1": "post no auth",
 "userComments": "Network Engineer",
  "userEduPg": "MSc Networking & Security",
  "userEduUg": "BSc Electrical Engineering",
  "userFirstName": "Olivia",
  "userLastName": "Clark",
  "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
  "userLocation": "Los Angeles",
  "userMiddleName": "Emily",
  "userPhoneNumber": "2135678901",
  "roleId": "R03",
  "userRoleStatus": "Active",
  "userTimeZone": "PST",
  "userVisaStatus": "US-Citizen",
  "loginStatus": "Active",
  "userLoginEmail": "olivia.clark55@gmail.com",
"expectedStatusCode": 401,
"expectedStatusMessage": "Unauthorized",
"endpoint": "/users/roleStatus",
"includeAuth": "false",
"schemaValidation": "no"
},
{
  "scenario": "post with role invalid auth",
  "scenario1": "post invalid auth",
 "userComments": "Network Engineer",
  "userEduPg": "MSc Networking & Security",
  "userEduUg": "BSc Electrical Engineering",
  "userFirstName": "Olivia",
  "userLastName": "Clark",
  "userLinkedinUrl": "https://www.linkedin.com/in/oliviaclark",
  "userLocation": "Los Angeles",
  "userMiddleName": "Emily",
  "userPhoneNumber": "2135678901",
  "roleId": "R03",
  "userRoleStatus": "Active",
  "userTimeZone": "PST",
  "userVisaStatus": "US-Citizen",
  "loginStatus": "Active",
  "userLoginEmail": "olivia.clark55@gmail.com",
"expectedStatusCode": 401,
"expectedStatusMessage": "Unauthorized",
"endpoint": "/users/roleStatus",
"includeAuth": "invalid",
"schemaValidation": "no"
}
     ]
      },
      {
        "name": "Get All Users",
        "data": [
          {
            "scenario": "get all users valid endpoint",
            "scenario1": "get all users",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint": "/users",
            "includeAuth": "true",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all users invalid endpoint",
            "scenario1": "get all users",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/usersss",
            "includeAuth": "true",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all users empty endpoint",
            "scenario1": "get all users",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "",
            "includeAuth": "true",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all users with No Auth",
            "scenario1": "get all users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users",
            "includeAuth": "false",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all users with invalid Auth",
            "scenario1": "get all users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all active users valid endpoint",
            "scenario1": "get all active users",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint": "/users/activeUsers",
            "includeAuth": "true",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all active users with invalid endpoint",
            "scenario1": "get all active users",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/usersss",
            "includeAuth": "true",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all active users with empty endpoint",
            "scenario1": "get all active users",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "",
            "includeAuth": "true",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all active users with no auth",
            "scenario1": "get all active users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/activeUsers",
            "includeAuth": "false",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get all active users with invalid auth",
            "scenario1": "get all active users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/activeUsers",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation": "yes"
          },
          {
            "scenario": "get emails of all active users valid endpoint",
            "scenario1": "get email all active users",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint": "/fetch-emails",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get emails of all active users invalid endpoint",
            "scenario1": "get email all active users",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/usersss",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get emails of all active users empty endpoint",
            "scenario1": "get email all active users",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get emails of all active users with no auth",
            "scenario1": "get email all active users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/activeUsers",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get emails of all active users with invalid auth",
            "scenario1": "get email all active users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/fetch-emails",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all roles with valid endpoint",
            "scenario1": "get all roles",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint": "/roles",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all roles with invalid endpoint",
            "scenario1": "get all roles",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/usersss",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all roles with empty endpoint",
            "scenario1": "get all roles",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all roles with no auth",
            "scenario1": "get all roles",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/roles",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all roles invalid auth",
            "scenario1": "get all roles",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/roles",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation": "no"
          },  
         
          {
            "scenario": "get all user with roles with valid endpoint",
            "scenario1": "get all user with roles",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint":"/users/roles",
            "includeAuth": "true",
            "schemaValidation": "byRole"
          },
          {
            "scenario": "get all user with roles with invalid endpoint",
            "scenario1":"get all user with roles",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/usersss",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all user with roles with empty endpoint",
            "scenario1":"get all user with roles",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all user with roles with no auth",
            "scenario1":"get all user with roles",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint":"/users/roles",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get all user with roles invalid auth",
            "scenario1":"get all user with roles",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint":"/users/roles",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation":"no"
          },
          {
            "scenario": "get Users by roleId V2 valid endpoint",
            "scenario1": "get Users by roleId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint": "/v2/users",
            "includeAuth": "true",
            "schemaValidation": "byRollIdV2"
          },
          {
            "scenario": "get Users by roleId V2 invalid endpoint",
            "scenario1": "get Users by roleId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/usersss",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Users by roleId V2 empty endpoint",
            "scenario1": "get Users by roleId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Users by roleId V2 with No Auth",
            "scenario1": "get Users by roleId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/v2/users",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Users by roleId V2 invalid Auth",
            "scenario1": "get Users by roleId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/v2/users",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation": "no"
          }
        ]
      },
          {
            "name": "Get Count of Active/Inactive Users",
            "data": [
              {
            "scenario": "get Count Active/InActive Users valid",
            "scenario1": "get Count Active/InActive Users",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint":"/users/byStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter all",
            "scenario1": "by all",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint":"/users/byStatus",
            "idValue":"all",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter Admin rollId",
            "scenario1": "by Admin rollId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint":"/users/byStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter Staff rollId",
            "scenario1": "by Staff rollId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint":"/users/byStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter Student rollId",
            "scenario1": "by Student rollId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint":"/users/byStatus",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter invalid Admin rollId",
            "scenario1": "by Admin invalid rollId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint":"/users/byStatus",
            "idValue":"R4#",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter invalid Staff rollId",
            "scenario1": "by Staff invalid rollId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint":"/users/byStatus",
            "idValue":"34ty",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with parameter invalid Student rollId",
            "scenario1": "by Student invalid rollId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint":"/users/byStatus",
            "idValue":"12dr",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with no auth",
            "scenario1": "get Count Active/InActive Users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
           "endpoint":"/users/byStatus",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get Count Active/InActive Users with invalid auth",
            "scenario1": "get Count Active/InActive Users",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint":"/users/byStatus",
            "includeAuth": "invalid",
            "invalidToken": "Invalid_Token_Value_12345",
            "schemaValidation": "no"
          }
        ]
      },
      {
        "name": "Get User by UserId",
        "data": [
          {
            "scenario": "get user by Userid valid",
            "scenario1": "by usersid",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "roleId":"R01",
            "endpoint": "/users",
            "includeAuth": "true",
            "schemaValidation": "byId"
          },
          {
            "scenario": "get user by Userid with invalid numbers",
            "scenario1": "usersid with numbers",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/748784447457",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get user by Userid with invalid alphabets",
            "scenario1": "usersid with alphabets",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/hgser",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get user by Userid with special characters",
            "scenario1": "usersid with special characters",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/U3$&",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get user by Userid with No Auth",
            "scenario1": "by usersid",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get user by Userid with invalid Auth",
            "scenario1": "by usersid",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users",
            "includeAuth": "invalid",
            "schemaValidation": "no"
          }
        ]
    },

          {
            "name": "Get User by IDs",
            "data": [
    
          {
            "scenario": "get User by Progaram Batches with BatchId valid",
            "scenario1": "by batchId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
            "endpoint": "/users/programBatch/{{batchId}}",
            "includeAuth": "true",
            "schemaValidation": "byBatchId"
          },
          {
            "scenario": "get User by Progaram Batches by BatchId invalid numbers",
            "scenario1": "batchId with numbers",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/programBatch/88877999998888",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get User by Progaram Batches by BatchId invalid alphabets",
            "scenario1": "batchId with alphabets",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/programBatch/AHHbbsdjsbd",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get User by Progaram Batches by BatchId with special characters",
            "scenario1": "batchId with special characters",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/programBatch/&#@^&7",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get User by Progaram Batches by BatchId with No Auth",
            "scenario1": "by batchId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/programBatch/{{batchId}}",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get User by Progaram Batches by BatchId with invalid Auth",
            "scenario1": "by batchId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/programBatch/{{batchId}}",
            "includeAuth": "invalid",
            "schemaValidation": "no"  
          },
          {
            "scenario": "get the User for Progaram with ProgramId valid",
            "scenario1": "by ProgramId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
           "endpoint": "/users/programs/{{programId}}",
            "includeAuth": "true",
            "schemaValidation": "byBatchId"
          },
          {
            "scenario": "get the User for Progaram with ProgramId invalid numbers",
            "scenario1": "ProgramId with numbers",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
           "endpoint": "/users/programs/586797690856",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User for Progaram with ProgramId invalid alphabets",
            "scenario1": "ProgramId with alphabets",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/programs/3456712",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User for Progaram with ProgramId with special characters",
            "scenario1": "ProgramId with special characters",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/programs/547$$$",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User for Progaram with ProgramId with No Auth",
            "scenario1": "by ProgramId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/programs/{{programId}}",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User for Progaram with ProgramId with invalid Auth",
            "scenario1": "by ProgramId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/programs/{{programId}}",
            "includeAuth": "invalid",
            "schemaValidation": "no"
          },
 {
            "scenario": "get the User with Admin roleId valid",
            "scenario1": "by Admin RoleId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
           "endpoint": "/users/roles/{{Admin_rollid}}",
            "includeAuth": "true",
            "schemaValidation": "byRollId"
          },
          {
            "scenario": "get the User with Staff roleId valid",
            "scenario1": "by Staff RoleId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
           "endpoint": "/users/roles/{{Staff_rollid}}",
            "includeAuth": "true",
            "schemaValidation": "byRollId"
          },
          {
            "scenario": "get the User with Student roleId valid",
            "scenario1": "by Student RoleId",
            "expectedStatusCode": 200,
            "expectedStatusMessage": "OK",
           "endpoint": "/users/roles/{{Student_rollid}}",
            "includeAuth": "true",
            "schemaValidation": "byRollId"
          },


          {
            "scenario": "get the User with roleId invalid numbers",
            "scenario1": "by RoleId ",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
           "endpoint": "/users/roles/87866",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User with roleId invalid alphabets",
            "scenario1": "by RoleId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/roles/khugy",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User with roleId with special characters",
            "scenario1": "by RoleId",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/roles/R&1",
            "includeAuth": "true",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User with roleId with No Auth",
            "scenario1": "by RoleId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/roles/{{Admin_rollid}}",
            "includeAuth": "false",
            "schemaValidation": "no"
          },
          {
            "scenario": "get the User with roleId with invalid Auth",
            "scenario1": "by RoleId",
            "expectedStatusCode": 401,
            "expectedStatusMessage": "Unauthorized",
            "endpoint": "/users/roles/{{Admin_rollid}}",
            "includeAuth": "invalid",
            "schemaValidation": "no"
          }
        ]
    },

          {
            "name": "All users Delete",
            "data": [

          {

            "scenario": "cleanup",
            "scenario1": "cleanup",
            "expectedStatusCode": 404,
            "expectedStatusMessage": "Not Found",
            "endpoint": "/users/",
            "includeAuth": "true",
            "schemaValidation": "no"
          }

     

        ]
      }
    ]
  }
]
  